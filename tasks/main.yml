---
# --------------------------------

- name: 'Install Dnsmasq'
  ansible.builtin.apt:
    name: '{{dnsmasq_pkg_name}}'
    state: '{{dnsmasq_state}}'
    update_cache: '{{dnsmasq_update_cache}}'
  become: true
  tags: [ct-dnsmasq]

- name: 'Get status of {{dnsmasq_resolv_conf}} (CM:false)'
  ansible.builtin.stat:
    path: '{{dnsmasq_resolv_conf}}'
  check_mode: false
  register: stat_resolver
  tags: [ct-dnsmasq]

- name: 'Remove {{dnsmasq_resolv_conf}} if it is a symlink'
  ansible.builtin.file:
    path: '{{dnsmasq_resolv_conf}}'
    state: absent
  when:
  - stat_resolver.stat.islnk is defined
  - stat_resolver.stat.islnk
  notify: Handler_Restart_Dnsmasq
  become: true
  tags: [ct-dnsmasq]

- name: 'Render Dnsmasq config file'
  ansible.builtin.template:
    src: default.j2
    dest: '{{dnsmasq_etc_dir}}/default'
    group: root
    mode: '0644'
    owner: root
  notify: Handler_Restart_Dnsmasq
  become: true
  tags: [ct-dnsmasq]

- name: 'Render {{dnsmasq_resolv_conf}}'
  ansible.builtin.template:
    src: resolv.conf.j2
    dest: '{{dnsmasq_resolv_conf}}'
    group: root
    mode: '0644'
    owner: root
  notify: Handler_Restart_Dnsmasq
  become: true
  tags: [ct-dnsmasq]

- name: 'Render details of fallback nameserver'
  ansible.builtin.template:
    src: forwarding_nameserver.j2
    dest: '{{dnsmasq_fallback_conf}}'
    group: root
    mode: '0644'
    owner: root
  notify: Handler_Restart_Dnsmasq
  become: true
  tags: [ct-dnsmasq]

- name: 'Disable and mask systemd resolver service'
  ansible.builtin.systemd:
    name: systemd-resolved.service
    enabled: false
    masked: true
  notify: Handler_Reboot_Server
  become: true
  tags: [ct-dnsmasq]

- name: 'Enable and unmask Dnsmasq service'
  ansible.builtin.systemd:
    name: '{{dnsmasq_unit_name}}'
    enabled: true
    masked: false
  notify: Handler_Reboot_Server
  become: true
  tags: [ct-dnsmasq]

# --------------------------------
...
