---
# --------------------------------


- name: "Disto/Family tasks (first found)"
  ansible.builtin.include_tasks:
    file: "{{ lookup('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
      - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
      - "{{ ansible_distribution }}.yml"
      - "{{ ansible_os_family }}.yml"
      - default.yml
  tags: [ct-dnsmasq]

- name: "Get status of old resolver file (check_mode=false)"
  ansible.builtin.stat:
    path: "{{ dnsmasq_resolv_conf }}"
  check_mode: false
  register: stat_resolver
  tags: [ct-dnsmasq]

- name: "Remove old resolver file if it is a symlink"
  ansible.builtin.file:
    path: "{{ dnsmasq_resolv_conf }}"
    state: absent
  when:
  - (stat_resolver.stat.islnk is defined and stat_resolver.stat.islnk) or (stat_resolver.stat.isfile is defined and stat_resolver.stat.isfile)
  notify: Handler_Restart_Dnsmasq
  become: true
  tags: [ct-dnsmasq]

# https://aws.amazon.com/premiumsupport/knowledge-center/ec2-static-dns-ubuntu-debian/
- name: "Inject line into  /etc/dhcp/dhclient.conf"
  ansible.builtin.lineinfile:
    line: "supersede domain-name-servers 127.0.0.1;"
    path: /etc/dhcp/dhclient.conf
    regexp: "^supersede domain-name-servers"
    state: present
  notify: Handler_Restart_Dnsmasq
  become: true
  when: ct_family == "redhat"
  tags: [ct-dnsmasq]

- name: "Render Dnsmasq config file"
  ansible.builtin.template:
    src: default.j2
    dest: "{{ dnsmasq_etc_dir }}/default"
    group: root
    mode: "0644"
    owner: root
  notify: Handler_Restart_Dnsmasq
  become: true
  tags: [ct-dnsmasq]

- name: "Render {{ dnsmasq_resolv_conf }}"
  ansible.builtin.template:
    src: resolv.conf.j2
    dest: "{{ dnsmasq_resolv_conf }}"
    group: root
    mode: "0644"
    owner: root
  notify: Handler_Restart_Dnsmasq
  become: true
  tags: [ct-dnsmasq]

- name: "Render details of fallback resolver"
  ansible.builtin.template:
    src: forwarding_nameserver.j2
    dest: "{{ dnsmasq_fallback_conf }}"
    group: root
    mode: "0644"
    owner: root
  notify: Handler_Restart_Dnsmasq
  become: true
  tags: [ct-dnsmasq]

- name: "Block around systemd resolver service"
  block:
  - name: "Disable and mask systemd resolver service"
    ansible.builtin.systemd:
      name: systemd-resolved.service
      enabled: false
      masked: true
    notify: Handler_Reboot_Server
    become: true
    tags: [ct-dnsmasq]
  rescue:
  - name: "Error handler"
    ansible.builtin.debug:
      msg: "ERROR :: with systemd resolver service"
    notify: Handler_Reboot_Server
    become: true
    tags: [ct-dnsmasq]

- name: "Enable and unmask Dnsmasq service"
  ansible.builtin.systemd:
    name: "{{ dnsmasq_unit_name }}"
    enabled: true
    masked: false
  notify: Handler_Reboot_Server
  become: true
  tags: [ct-dnsmasq]

# --------------------------------
...
